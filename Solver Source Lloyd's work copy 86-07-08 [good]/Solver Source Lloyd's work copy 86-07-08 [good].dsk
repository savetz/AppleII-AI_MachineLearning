( SOLVER LOAD BLOCK      < 6/26/86>140)                                                                                                                           141 241 THRU  \ MAIN SOLVER             275 278 THRU  \ TEST WORDS                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   ( LRP  )                                                                 ( CONSTANTS              < 6/26/86>141)                                         4 ' WIDTH !                                                                     CREATE NODES 684 ALLOT                                                          22 CONSTANT LEN                         29 CONSTANT NODE#MAX                                                                                                     2 CONSTANT KIND    4 CONSTANT NUM       6 CONSTANT DENOM   8 CONSTANT VAROP    10 CONSTANT PRED   12 CONSTANT L/R      14 CONSTANT LT     16 CONSTANT RT       18 CONSTANT PAR    20 CONSTANT PL/R      1 CONSTANT CON     2 CONSTANT VAR       3 CONSTANT OP                                                                                                                                                                                                                                                                                                         ( LRP  )                                                                 ( @ AND ! OPERATORS      < 6/26/86>142)                                         : GET   CREATE C, DOES> C@ + @ ;                                                : PUT CREATE  C, DOES> C@ + ! ;                                                 KIND  GET @KIND   KIND   PUT !KIND      NUM   GET @NUM    NUM    PUT !NUM       DENOM GET @DENOM  DENOM  PUT !DENOM     VAROP GET @VAROP  VAROP  PUT !VAROP     LT    GET @LT     LT     PUT !LT        RT    GET @RT     RT     PUT !RT        PRED  GET @PRED   PRED   PUT !PRED      L/R   GET @L/R    L/R    PUT !L/R       PAR   GET @PAR    PAR    PUT !PAR       PL/R  GET @PL/R   PL/R   PUT !PL/R                                                                                                                                                                                                                                                                                                                             ( LRP  )                                                                 ( MORE CONSTANTS         < 6/26/86>143)                                           126 CONSTANT NEG                        124 CONSTANT ABS#                        20 CONSTANT HIGHVAL                      0 CONSTANT LEFT                         1 CONSTANT RIGHT                        0 CONSTANT NUL                          0 CONSTANT <*GO>                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   ( LRP  )                                                                 ( DATA ARRAYS  !NSTACK   < 6/26/86>144)                                         VARIABLE NPOINT                         VARIABLE ROOT                                                                   CREATE NSTACK         52 ALLOT          CREATE VARNAME        52 ALLOT          CREATE NONPLUS        32 ALLOT                                                  : !NSTACK   ( node-adr -- )                  NPOINT @  DUP 0 >=                      IF                                        NSTACK + !                            ELSE                                      CR ." TRY TO STORE - IN NSTACK"         R> U. R> U. QUIT                      THEN ;                                                                                                                                                                                                                                                                                                            ( LRP  )                                                                 ( VARIABLES              < 6/26/86>145)                                         VARIABLE NEW-NODE   VARIABLE CUR-NODE   VARIABLE NUM-NODES  VARIABLE TPTR       VARIABLE #PAR       VARIABLE NUM-SAVE   VARIABLE DENOM-SAVE VARIABLE #NODE      VARIABLE OP-SAVE    VARIABLE RDIST<-OK  VARIABLE DIST<-OK   VARIABLE L-DENOM    VARIABLE LDIST<-OK  VARIABLE ?MUL       VARIABLE ?DIST<     VARIABLE ?CLT       VARIABLE ?TCOMB     VARIABLE L-KIND     VARIABLE <?COMB>    VARIABLE ?CM        VARIABLE DENOM-R    VARIABLE KIND-R     VARIABLE NUM-R                          VARIABLE L-NUM      VARIABLE L-R        VARIABLE RT-LEAF 0 TPTR !               EXIT                                    \ The following will be set by          \ the input routine and parser          \ 0 CONSTANT VARNUL \ HOLDS XVAR OR NUL \ 0 CONSTANT $NUM   \ HOLDS USER NUM    \ 0 CONSTANT $DENOM \ HOLDS USER DENOM                                                                         ( LRP  )                                                                 ( VARIABLES cont.        < 6/26/86>146)                                         VARIABLE RT-NODE  VARIABLE ?DEL-NEG     VARIABLE #VAR     VARIABLE ABS-RT-CHILD VARIABLE CONFLAG  VARIABLE CONPLACE     VARIABLE #NONPLUS VARIABLE VCOUNT       VARIABLE FOUND    VARIABLE IGNORE-SUC   VARIABLE PNODE    VARIABLE SUBROOT      VARIABLE RT-SAVE  VARIABLE CANCELS      VARIABLE SOLVED                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                ( LRP  )                                                                 ( ADDR +-RAN RANDSIGN +  < 6/26/86>147) NODES 682 NUL FILL                      \ NODE # ---> ADDRESS OF NODE           : ADDR  LEN * NODES + ;                    ( ADDRESS OF NODE GIVE NODE NO. )    \ N --> N                               : +-RAN   2 RANDOM IF NEGATE THEN ;     \ * --> PLUS OR MINUS                   : RANDSIGN                               2 RANDOM  IF PLUS ELSE MINUS THEN ;                                            : LT-#NUL     NUL SWAP !LT ;            \ N1 , N2 --> N1 + N2 OR N1 - N2        : P/M                                      PLUS = IF + ELSE - THEN ;            \ NODE ADDRESS --> *                    : DELNODE   LEN NUL FILL ;              : NUM@  ADDR @NUM ;                     : NUM!  ADDR !NUM ;                     WIDTH 6 TO WIDTH                        : DENOM@ ADDR @DENOM ;                  : DENOM! ADDR !DENOM ;                  TO WIDTH                                                               ( LRP  )                                                                 ( <PARENS>               < 6/26/86>148)                                         : <PARENS>                                  SWAP 0                                  DO                                        DUP EMIT                              LOOP  DROP ;                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       ( LRP  )                                                                 ( TREE-FULL              < 6/26/86>149)                                         \ Search the tree for a free node.      \ Return a 1 if a node is available     \ or a 0 if not.                        \ The node # is left in local.                                                  MAKELOCAL                                                                       : TREE-FULL                                -1 LOCAL ! 29 0                         DO                                       I ADDR @KIND NOT                        IF I LOCAL ! LEAVE THEN                LOOP   LOCAL @ 0 <     ;                                                     \ If a free node is available,          \   return node #, 1; if not, return 0.                                         : FREENODE ( -- 0 or node #, 1 )           TREE-FULL NOT                           IF LOCAL @ 1 ELSE 0 THEN ;                                                                                  ( FAH  )                                                                 ( IS-PAR IF-LT-PAR +     < 6/26/86>150)                                         : IS-PAR   ( adr -- )                       DUP @PAR DUP                            IF                                        #PAR ! @PL/R L-R ! 1                  ELSE                                      DDROP 0. L-R !                        THEN ;                                                                      : IF-LT-PAR ( adr -- )                      IS-PAR L-R @ NOT AND                    IF                                        #PAR @ 40 <PARENS>                    THEN ;                                                                      : IF-RT-PAR                                 L-R @                                   IF                                        8 EMIT                                  #PAR @ 41 <PARENS> SPACE              THEN ;                                                                                                     ( LRP  )                                                                 ( *GO  CASE              < 7/ 8/86>151)                                         : *GO      ( adr -- left min )             CFA TO <*GO>                            BEGIN                                     DUP <*GO> EXECUTE DUP                   NUL = NOT                             WHILE                                     SWAP DROP                             REPEAT DROP ;                                                                : CASE                                     :                                       DOES>                                     SWAP 2* +                               @ EXECUTE ;                                                                : BS  8 EMIT ;                                                                                                                                                                                                                                                                 ( LRP  )                                                                 ( BS .N/D .CON .VARNODE +< 6/26/86>152)                                         : .N/D  ( n d -- )                          DDUP 0= SWAP 0= OR                      IF      DDROP  0 .                      ELSE    SWAP .                               DUP 1 =                              IF   DROP                               ELSE BS DIV EMIT .                      THEN                                  THEN  ;                                                                                                             : .CON   ( node-adr -- )                    DUP @NUM SWAP @DENOM .N/D ;                                                 : .VARNODE                                  >R  ( NODE ADDR )                       I @NUM  R> @DENOM                       DDUP = NOT                              IF .N/D ELSE DDROP THEN                 120    ( XVAR ) EMIT SPACE ;                                                                                                                                                        ( .NODE                  < 7/ 8/86>153)                                         : .VAROP                                    @VAROP EMIT SPACE ;                                                                                                 CASE <.NODE>  ( node-adr, kind - 1 -- )     .CON .VARNODE .VAROP ;                                                      : .NODE  ( node adr -- )                    DUP IF-LT-PAR                           DUP @KIND  1-                           DUP 0 2 WITHIN                          IF                                        <.NODE>                               ELSE                                      DDROP                                 THEN                                    IF-RT-PAR ;                                                                                                                                                                                                                        ( LRP  )                                                                 ( <MARKNODE>             < 6/26/86>154)                                         : PRINTNODE                                 .NODE ;                                                                     : <MARKNODE>                               DUP @KIND 128 OR SWAP                   !KIND ;                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     ( LRP  )                                                                 ( NEG-ABS GO-LEFT        < 6/26/86>155)                                         : NEG-ABS ( adr -- f )                      @VAROP  NEG = ;                                                             : GO-LEFT   ( node-adr -- )                 BEGIN                                     DUP NUL = NOT                         WHILE                                     DUP !NSTACK \ NSTACK NPOINT @ + !            \ store node adr in NSTACK         2 NPOINT +!  \ update ptr               @LT  \ get contents of left ptr       REPEAT                                  -2 NPOINT +!  \ point to top item       DROP ;                                                                                                                                                                                                                                                                                                                                                     ( LRP  )                                                                 ( PRINT1                 < 6/26/86>156)                                         : PRINT1                                   IF                                        DUP NEG-ABS                             IF                                        @RT SWAP 2+ NPOINT !                     \ increase ptr to compensate           GO-LEFT                               ELSE                                      DROP NSTACK + @ DUP                     PRINTNODE                               @RT GO-LEFT                           THEN                                  ELSE                                      DDROP                                 THEN ;                                                                                                                                                                                                                                                                                                              ( LRP  )                                                                 ( <PRINT> INORDER PRINT +< 6/26/86>157)                                         : <PRINT>   ( adr -- )                       0 NPOINT ! GO-LEFT                    BEGIN                                     NPOINT @ DUP 0 < NOT                  WHILE   NSTACK + @ DUP                    PRINTNODE  \ print node                 NPOINT @ 2- DUP NPOINT ! \ dec ptr      DUP 0< NOT ROT DUP                      NEG-ABS ROT OR PRINT1                 REPEAT  DROP ;                                                               : INORDER                                  \ inorder from the root                 0 ADDR 0 NPOINT !   <PRINT> ;                                                : PRINT    NOOP ;                                                               : LPRINT   0 ADDR @LT <PRINT> ;                                                 : RPRINT   0 ADDR @RT <PRINT> ;                                                                                ( LRP  )                                                                 ( PT-MAKE RT-PT-MAKE LT- < 6/26/86>158)                                         : PT-MAKE ( adr1 adr2 f f -- )             >R >R DDUP SWAP R>                      IF                                        !RT                                   ELSE                                      !LT                                   THEN                                    SWAP OVER !PRED R> SWAP !L/R ;                                                                                       : RT-PT-MAKE  ( adr1  adr2 -- )            RIGHT 1 PT-MAKE ;                                                            : LT-PT-MAKE ( adr1  adr2 -- )             LEFT 0 PT-MAKE ;                                                                                                                                                                                                                                                                                                    ( LRP  )                                                                 (  @T <INSERT>           < 6/26/86>159)                                         CASE @T                                         @LT            @RT                      LT-PT-MAKE     RT-PT-MAKE               LEFT           RIGHT                    !LT            !RT ;                                                    : <INSERT>                                  >R >R >R                                DUP R>               @T                 NEW-NODE @  SWAP R>  @T                 NEW-NODE @  R>       @T ;                                                                                                                                                                                                                                                                                                                                                                                                                                                          ( LRP  )                                                                 ( #LR-INSERT #RR-INSERT +< 6/26/86>160)                                         \    Adr of pred to new node            \    left branch of pred: insert node   \    whose right ptr points to what     \    its predecessor pointed to.                                                : #LR-INSERT     0 3 2 <INSERT> ;                                               \    Adr of pred to new node            \    rt branch of pred: insert          \    node whose right ptr               \    points to what its predecessor     \    pointed to.                                                                : #RR-INSERT       1 3 3 <INSERT> ;                                             \    Adr of pred to new node            \    left branch of pred: insert        \    node whose left ptr points to      \    what its predecessor pointed to.                                           : #LL-INSERT        0 2 2 <INSERT> ;                                   ( LRP  )                                                                 ( #RL-INSERT <LEAF-INSERT< 6/26/86>161)                                         \    Adr of pred to new node            \    rt branch of pred: insert node     \    whose left pointer points to       \    what its predecessor pointed to.                                           : #RL-INSERT       1 2 3 <INSERT> ;                                             : <LEAF-INSERT>                             NEW-NODE @ >R >R DUP I' !PRED           I @T I' !L/R I' SWAP R> 2+ @T           R> DUP NUL SWAP !RT                     NUL SWAP !LT ;                                                              : R-LEAF-INSERT ( adr -- )                  5 <LEAF-INSERT> ;                                                           : L-LEAF-INSERT ( adr )                     4 <LEAF-INSERT> ;                                                                                                                                                                          ( LRP  )                                                                 ( <OP> OP-NODE-CREATE +  < 6/26/86>162)                                         : <OP>                                      FREENODE                                IF                                         ADDR   DUP NEW-NODE !                   SWAP OVER                            ELSE ." NO MORE NODES LEFT !!"             QUIT                                 THEN ;                                                                      : OP-NODE-CREATE ( operand )                <OP> !VAROP OP SWAP !KIND ;                                                 : CON-NODE-CREATE ( num denom )             <OP> !DENOM >R I !NUM CON               R> !KIND ;                                                                  : VAR-NODE-CREATE ( num denom var )         <OP> !VAROP >R I !DENOM                 I !NUM VAR R> !KIND ;                                                                                                                              ( LRP  )                                                                 ( <##INS> <#INSERT>      < 6/26/86>163)                                         CASE <##INS>                              #LL-INSERT     #LR-INSERT               #RL-INSERT     #RR-INSERT               R-LEAF-INSERT  L-LEAF-INSERT ;                                                MAKELOCAL                                                                       : <#INSERT>                                 >R >R 0 ADDR I <##INS>                  R> NEW-NODE @ >R 2 <                    IF                                        LOCAL ! DDUP                          THEN                                    LOCAL @   DUP                           IF                                        VAR-NODE-CREATE                       ELSE                                      DROP CON-NODE-CREATE                  THEN                                    R> R> <##INS> ;                                                                                            ( LRP  )                                                                 ( LR-OP-VAR-INSERT +     < 6/26/86>164)                                         : LR-OP-VAR-INSERT                          0 4 <#INSERT> ;                                                             : RR-OP-VAR-INSERT                          2 4 <#INSERT> ;                                                             : LL-OP-VAR-INSERT                          1 5 <#INSERT> ;                                                             : RL-OP-VAR-INSERT                          3 5 <#INSERT> ;                                                             : *PP                                       NOOP ;                                                                                                                                                                                                                                                                                                                                                     ( LRP  )                                                                 ( :OP? IS+- ?MULT ?DIV   < 6/26/86>165)                                         : :OP?                                       CREATE                                    C,                                    DOES>                                     C@ SWAP @VAROP = ;                                                       MULT  :OP? ?MULT                        DIV   :OP? ?DIV                         PLUS  :OP? ?PLUS                        MINUS :OP? ?MINUS                                                               : IS+-  ( node-adr -- f )                   DUP ?PLUS SWAP ?MINUS OR ;                                                                                                                                                                                                                                                                                                                                                                         ( LRP  )                                                                 ( DIST<-CHECK            < 6/26/86>166) : DIST<-CHECK ( node-adr -- )               0. RDIST<-OK ! LDIST<-OK !              DUP CUR-NODE ! DUP ?MULT                SWAP ?DIV OR                            IF                                        CUR-NODE @ DUP @LT                      IS+-                                    IF                                        1 RDIST<-OK !                         THEN                                    DUP ?MULT                               IF                                        @RT IS+-                                IF   1 LDIST<-OK ! THEN               ELSE                                      DROP                                  THEN                                  THEN                                    RDIST<-OK @ LDIST<-OK @ OR              IF      1 DIST<-OK ! 1 ?DIST< !         ELSE    0 DIST<-OK !                    THEN ;                                                             ( LRP  )                                                                 ( COPY-NODE-LEAF         < 6/26/86>167)                                         : COPY-NODE-LEAF ( adr -- )                 DUP @KIND DUP >R                        OP =                                    IF                                        R> DROP \ ADDED BY GW 6/17              @VAROP OP-NODE-CREATE                 ELSE                                      R> CON =                                IF                                        DUP @NUM SWAP @DENOM                    CON-NODE-CREATE                       ELSE                                      DUP DUP @NUM SWAP                       @DENOM ROT @VAROP                       VAR-NODE-CREATE                       THEN                                  THEN ;                                                                                                                                                                                                                             ( LRP  )                                                                 ( RL <DIST<1>>           < 6/26/86>168)                                         CASE RL                                        @RT              @LT                    RT-PT-MAKE       LT-PT-MAKE             R-LEAF-INSERT    L-LEAF-INSERT          LDIST<-OK        RDIST<-OK ;                                             : <DIST<1>>                                 >R I RL I NOT RL NEW-NODE @             SWAP I 2+ RL NEW-NODE @ I NOT           RL COPY-NODE-LEAF CUR-NODE @            I RL DUP I NOT 4 + RL R>                IF      ?MUL @                            IF                                        MULT                                  ELSE                                      DIV                                   THEN                                  ELSE                                      MULT                                  THEN                                    SWAP !VAROP ;                                                      ( LRP  )                                                                 ( <DIST<>                < 6/26/86>169) : <DIST<>  ( OP-NODE-ADDRESS )             >R DIST<-CHECK I 6 + RL @               TREE-FULL NOT AND                       IF   CUR-NODE @ DUP DDUP I               IF ( ?MULT DUP ) @LT ELSE @RT THEN        ?PLUS IF PLUS ELSE MINUS  THEN          SWAP !VAROP R>                          IF     ?MUL @                             IF                                        MULT OP-NODE-CREATE                   ELSE   DIV OP-NODE-CREATE               THEN                                    #RR-INSERT                              1 <DIST<1>>                           ELSE        MULT OP-NODE-CREATE           #LL-INSERT                              0 <DIST<1>>                           THEN                                  ELSE  R> DROP \ ADDED BY GW 6/17          CR ." CAN'T DO: LDIST< CANNOT"          CR ." BE APPLIED HERE "               THEN ;                                                             ( LRP  )                                                                 ( M--FUNCTION L-FUNCTION < 6/26/86>170)                                          CASE M-FUNCTION                              LL-OP-VAR-INSERT RL-OP-VAR-INSERT       LR-OP-VAR-INSERT RR-OP-VAR-INSERT       MULT             PLUS                   MINUS            DIV ;                                                    : L-FUNCTION                                >R >R                                   IF                                        I M-FUNCTION OP-NODE-CREATE             I' M-FUNCTION R> M-FUNCTION             OP-NODE-CREATE R> 1+                    M-FUNCTION *PP                        ELSE                                      DDROP R> R> DDROP DROP CR               ." TOO MANY STEPS OR NON-LINEAR"        CR ." STEP"                           THEN   ;                                                                    : ?TFULL                                    DUP TREE-FULL OR NOT ;                                             ( LRP  )                                                                 ( L-MULT R-DIV R-SUBT R-A< 6/26/86>171) : R-SUBT                                     TREE-FULL NOT                           6 2 L-FUNCTION ;                   : L-SUBT                                     TREE-FULL NOT                           6 0 L-FUNCTION ;                   : R-DIV                                      ?TFULL 7 2 L-FUNCTION ;                                                    : L-DIV                                      ?TFULL 7 0 L-FUNCTION ;            : R-ADD                                      TREE-FULL NOT                           5 2 L-FUNCTION ;                   : L-ADD                                      TREE-FULL NOT                           5 0 L-FUNCTION ;                                                           : L-MULT                                     ?TFULL 4 0 L-FUNCTION ;            : R-MULT                                     ?TFULL 4 2 L-FUNCTION ;                                           ( FAH  )                                                                 ( #REDUCE                < 7/ 8/86>172)                                         : #REDUCE   ( num denom -- num1 denom1)     DDUP \ NUM OR DENOM= 0                  0= SWAP 0= OR                           IF               DDROP 0 0              ELSE     \ NUM DENOM -- 1 OR -1            DDUP 0< SWAP 0< =                       IF 1 ELSE -1 THEN                       >R                                      ABS SWAP ABS SWAP                       DDUP                                    1 BEGIN       ( GCD )                     WHILE       DDUP MOD                      ROT DROP DUP                          REPEAT      DROP                        DUP 1 = NOT                           IF          SWAP OVER /                 ROT ROT / SWAP                          ELSE                                      DROP                                  THEN                                    SWAP R> * SWAP                       THEN ;                     ( LRP  )                                                                 ( DO-NEG-OR-ABS RECOVER-N< 7/ 8/86>173)                                         : DO-NEG-OR-ABS   ( adr op -- )             \ Does op and stores in node            NEG =                                   IF                                        DUP @NUM NEGATE SWAP !NUM             THEN ;                                                                      : RECOVER-NODES    ( node-adr -- )          ' PRINTNODE @ >R                        ' <MARKNODE> CFA TO PRINTNODE           INORDER                                 NODE#MAX 0                              DO                                        I ADDR DUP @KIND                        128 AND NOT                             IF     DELNODE                          ELSE   DUP @KIND 127 AND                       SWAP !KIND                       THEN                                  LOOP                                    R> TO PRINTNODE ;                   EXIT                           ( LRP  )                                                                 ( NEG-ABS-DELETE #REDUCE!< 7/ 8/86>174)                                         : NEG-ABS-DELETE ( adr -- )                  DUP >R                                  DUP @L/R RIGHT = >R                     DUP @PRED SWAP @RT                      R> 2+ @T                                R> DELNODE ;                                                               : #REDUCE!                                   NUM-SAVE @ DENOM-SAVE                   @ #REDUCE DENOM-SAVE !                  NUM-SAVE ! ;                                                               : *COMPUTE ( op -- )                        MULT =                                  IF                                        NUM-R @ L-DENOM @ #REDUCE >R            L-NUM @ DENOM-R @ #REDUCE R>            * DENOM-SAVE ! * NUM-SAVE !           THEN ;                                                                                                                                             ( LRP  )                                                                 ( /COMPUTE               < 7/ 8/86>175)                                         : /COMPUTE ( op -- )                        DIV =                                   IF                                        L-NUM @ NUM-R     @ #REDUCE >R          DENOM-R @ L-DENOM @ #REDUCE >R          * NUM-SAVE !             R> R>          * DENOM-SAVE !                        THEN ;                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     ( LRP  )                                                                 ( +-COMPUTE              < 7/ 8/86>176)                                         : +-COMPUTE ( op -- )                       DUP PLUS = SWAP MINUS = OR              IF                                        L-NUM @ 0= L-DENOM @ 0= OR              IF                                         NUM-R   @ NUM-SAVE   !                  DENOM-R @ DENOM-SAVE !               ELSE                                       NUM-R @ 0= DENOM-R @ 0= OR              IF                                         L-NUM   @ NUM-SAVE   !                  L-DENOM @ DENOM-SAVE !               ELSE                                       L-DENOM @ DENOM-R @ *                   DENOM-SAVE !                            L-NUM @ DENOM-R @   *                   NUM-R @ L-DENOM @   *                   OP-SAVE @ P/M                           NUM-SAVE !                           THEN                                 THEN                                  THEN  ;                    ( LRP  )                                                                 ( NCOMPUTE               < 7/ 8/86>177)                                         : NCOMPUTE   ( -- )                         \ Computes result; puts num and         \ denom in num-save and denom-save      OP-SAVE @ DUP DUP                       *COMPUTE                                /COMPUTE                                +-COMPUTE                               #REDUCE! ;                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 ( LRP  )                                                                 ( PUT-COMP               < 6/26/86>178)                                         : PUT-COMP ( adr-of-op R/L -- )              @T                                      DUP NUM-SAVE @ SWAP                     !NUM DENOM-SAVE @                       SWAP !DENOM ;                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     ( LRP  )                                                                 ( DELETE-NODE&PRED       < 6/26/86>179)                                         : DELETE-NODE&PRED ( adr -- )           \   Deletes node, puts other child      \   in predecessor's place                  DUP       >R                            @PRED DUP R>                            @L/R NOT                                @T SWAP DUP @PRED SWAP                  @L/R                                    ROT SWAP NOT NOT  2+ @T ;                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          ( LRP  )                                                                 (                        < 6/26/86>180) EXIT                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           ( LRP  )                                                                 (                        < 6/26/86>181) EXIT                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           ( LRP  )                                                                 ( IS-LEAF                < 6/26/86>182)                                         \ A leaf has no left or right pointer.  \ IS-LEAF tests left and right          \ links of the node address for 0.      \ Returns a true if the node is a leaf. \ Returns a false if the node           \ is not a leaf; e.g. LT OR RT <> 0.                                            : IS-LEAF ( node-adr -- f )                  DUP @RT 0=                              IF                                        @LT 0=                                ELSE                                      DROP 0                                THEN ;                                                                                                                                                                                                                                                                                                                                                    ( LRP  )                                                                 ( HAS-LEAVES             < 6/26/86>183)                                         : HAS-LEAVES    ( node-adr -- f )           \ RT PTR <> = 0                         DUP @RT DUP                             IF                                        IS-LEAF   \ adr, rt adr                 \ Is the right adr a leaf?              \ If it is, test left adr.              IF                                        @LT DUP 0=    \ lt adr f                IF                                        \ lt and rt nodes are leaves            DROP 1   \  true                      ELSE                                      IS-LEAF \ test lt ptr                 THEN                                  ELSE      DROP 0 \ RIGHT PTR = 0        THEN                                    \ rt ptr is 0                           \ This node does not have leaves.     ELSE          DDROP 0                   THEN ;                                                             ( LRP  )                                                                 ( PLUS-MINUS-CON&VAR     < 6/26/86>184)                                         : PLUS-MINUS-CON&VAR ( op -- f )            DUP PLUS = SWAP                         MINUS = OR                              IF                                        L-KIND @ CON =                          KIND-R @ VAR = AND                      L-KIND @ VAR =                          KIND-R @ CON = AND OR                 ELSE                                      \  DROP  0   \ LRP 7/1/86               0            \ LRP 7/1/86             THEN ;                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              ( DO-OP2                 < 6/26/86>185)                                         : DO-OP2                                   IF                                        RIGHT DUP RT-LEAF ! PUT-COMP              \ puts result in rt leaf            ELSE                                       KIND-R @ CON =                          IF     LEFT DUP RT-LEAF !                 PUT-COMP                              ELSE                                      \ both are variable                     OP-SAVE @ DUP PLUS = SWAP               MINUS = OR                              IF  RIGHT DUP RT-LEAF !                   PUT-COMP                              ELSE                                      CR ." CAN'T DO NOW "                  THEN                                 THEN                                 THEN ;                                                                                                                                               ( LRP  )                                                                 ( OP1-DO                 < 6/26/86>186)                                         : OP1-DO    ( adr -- num )                        DUP DUP @LT DUP DUP            ( LT )   @KIND    L-KIND   !            ( LT )   @NUM     L-NUM    !            ( LT )   @DENOM   L-DENOM  !                     @RT      DUP DUP               ( RT )   @KIND    KIND-R   !            ( RT )   @NUM     NUM-R    !            ( RT )   @DENOM   DENOM-R  !  ( DUP )   ( ROOT ) @VAROP   OP-SAVE ! NCOMPUTE               \ Saves num and denom in                \ NUM-SAVE and DENOM-SAVE             NUM-SAVE @ ;                                                                                                                                                                                                                                                                                                                                                                                 ( LRP  )                                                                 ( DO-OP                  < 6/26/86>187)                                         : DO-OP  ( adr -- )                       \ Address of op node with two leaves.   \ Does op and sets CANCELS; Stores      \ in rt or lt leaf if CANCELS is        \ false and sets rt-leaf to true        \ or false.                               0 CANCELS !                             DUP OP1-DO                              IF                                        L-KIND @ CON = DO-OP2                 ELSE                                      DUP @PRED ROOT @ =                      IF   \ Special case when                     \ predecessor is the root.           DUP @RT CON SWAP !KIND                  RIGHT DUP RT-LEAF !                     PUT-COMP                              ELSE                                      DROP 1 CANCELS !                      THEN                                  THEN ;                                                             ( LRP  )                                                                 ( COMB1                  < 6/26/86>188) : COMB1  ( adr adr adr op -- adr )          SWAP DUP @LT @KIND L-KIND !             @RT @KIND KIND-R !                      PLUS-MINUS-CON&VAR NOT                  IF  1 <?COMB> ! 1 ?TCOMB !                  DUP DO-OP                                 \ Does op and sets CANCELS.             \ If CANCELS is false it                \ puts result in rt or lt               \ leaf and sets rt-leaf               CANCELS @                               IF    DELETE-NODE&PRED                    \ Delete node and it's pred           ELSE                                      DUP DUP @PRED SWAP                      @L/R >R                                 SWAP RT-LEAF @ NOT NOT @T               R> NOT NOT  2+ @T                     THEN                                      \ Replace op with leaf            ELSE    ( DDROP ) DROP                  THEN ;                                                             ( LRP  )                                                                 ( COMB                   < 6/26/86>189)                                         : COMB ( node-adr -- )                      0 <?COMB> ! DUP HAS-LEAVES              IF                                         DUP ( DDUP ) DUP @VAROP DUP DUP         NEG = SWAP ABS# = OR                    IF  1 <?COMB> !                           1 ?TCOMB !                              SWAP @RT SWAP DO-NEG-OR-ABS              \ Does op and stores in node           NEG-ABS-DELETE                          RIGHT RT-LEAF   !                       0 CANCELS !                           ELSE                                      ( OP: +, -, *, OR / )                   COMB1                                THEN                                  ELSE                                      DROP                                  THEN ;                                                                      \ LRP changed DDUP 7/3/86                                              ( LRP  )                                                                 (                        < 6/26/86>190) EXIT                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           ( LRP  )                                                                 ( SWITCH-RL              < 6/26/86>191)                                         : SWITCH-RL ( adr -- )                        \ Switch right and left ptrsadr -- )                    NEG-ABS-DELETE                          ?DEL-NEG @                              IF                                         RT-NODE @                              @RT RT-NODE !                         THEN ;                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             ( LRP  )                                                                 (                        < 6/26/86>195) EXIT                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           ( LRP  )                                                                 ( CHANGE-TO-PLUS L-INSERT< 6/26/86>196)                                         : CHANGE-TO-PLUS ( adr -- )                 PLUS SWAP !VAROP ;                                                          : L-INSERT-NEG ( adr -- )                   NEG OP-NODE-CREATE                      NEW-NODE @                              LT-#NUL   #LR-INSERT ;                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             ( LRP  )                                                                 (                        < 6/26/86>197) EXIT                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           ( LRP  )                                                                 ( PM1                    < 6/26/86>198) : PM1                                       IF                                        DUP @VAROP DUP PLUS =                   IF SWAP DUP L-INSERT-NEG                   NEG OP-NODE-CREATE                      NEW-NODE @ LT-#NUL                      #RR-INSERT                              DROP                                 ELSE     DUP MINUS =                      IF  SWAP DUP CHANGE-TO-PLUS                 L-INSERT-NEG DROP                   ELSE    DUP NEG =                         IF   SWAP #NEG-DELETE DROP              ELSE DUP MULT = SWAP                         DIV = OR                             IF L-INSERT-NEG THEN                  THEN                                  THEN                                  THEN                                  ELSE     \   Change-sign                  DUP @NUM -1 * SWAP !NUM               THEN ;                                                             ( LRP  )                                                                 ( PM2                    < 6/26/86>199)                                         : PM2                                       IF                                        DUP @VAROP DUP DUP MINUS                = SWAP NEG = OR                         IF      MINUS =                           IF                                         CHANGE-TO-PLUS                          1 ?CM !                              ELSE                                       1 ?DEL-NEG !                            1 ?CM !                                 NEG-ABS-DELETE                       THEN                                       RT-NODE @ DUP @KIND                     OP = PM1                                                                   ELSE    DDROP                           THEN                                 ELSE        DROP                        THEN ;                                                                                                      ( LRP  )                                                                 (  PUSH-MINUS            < 6/26/86>200)                                         : PUSH-MINUS     ( adr -- )                  0 ?DEL-NEG ! TREE-FULL                  NOT  IF                                         DUP DUP                                 @RT RT-NODE !                           @KIND OP = PM2                       ELSE                                      CR ." TOO MANY NEW NODES "              ." MAY BE NEEDED " DROP               THEN ;                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               ( LRP  )                                                                 (    DEL-COMB            < 6/26/86>201)                                         : DEL-COMB ( adr -- adr )                   <?COMB> @                               IF                                         CANCELS @ NOT                           IF                                         \ If RT-LEAF 0 then @LT                 \ else @RT                              RT-LEAF @ NOT NOT  @T                ELSE                                       DROP NPOINT @ 2- DUP                    NPOINT !  NSTACK + @ @RT             THEN                                 THEN ;                                                                                                                                                                                                                                                                                                                                                                                                                                                                      (  DEL-NEG NEG/ABS SKIP  < 6/26/86>202)                                         : DEL-NEG                                   ?DEL-NEG @                              IF DROP RT-NODE @ THEN ;                                                    : NEG/ABS  ( adr pt -- )                    SWAP DUP @VAROP NEG =  ;                                                    : SKIP     ( adr pt -- )                    SWAP 0 ;                                                                    : ACTION      NOOP ;                                                            : NTEST       NOOP ;                                                            : GO-NOOP     NOOP ;                                                            : SP-TEST     NOOP ;                                                                                                                                                                                                                   ( LRP  )                                                                 (  #GO-LEFT              < 6/26/86>203)                                         \ Subroutine for TRAV.                  \ Find the left most node               \ from a node address.                                                          : #GO-LEFT ( node-adr -- )                 BEGIN                                     DUP                                   WHILE                                     DUP NTEST ACTION  DUP                   !NSTACK      \ Store node-adr                        \ in NSTACK.               2 NPOINT +!  \ Update ptr.              @LT          \ Get contents of                       \ left ptr.              REPEAT                                  -2 NPOINT +! \ POINT TO TOP ITEM        DROP ;                                                                                                                                                                                                                              ( LRP  )                                                                 ( TRAVERSE NODES INORDER           203) : TRAV   ( ADDR )                                 ( .MYSELF )                             0 NPOINT ! GO-NOOP               BEGIN  NPOINT @ DUP 0< NOT              WHILE \  STACK NOT EMPTY                      NSTACK + @ \ GET TOP OF STACK           NPOINT @ 2- DUP NPOINT !                          \ DECREASE POINTER            DUP 0< NOT                     IF       SP-TEST                            IF   @RT SWAP 2+ NPOINT !                \ INCREASE POINTER TO COMPENSATE            GO-NOOP                            ELSE                                         DROP NSTACK + @                         ( GET TOP OF STACK )                    @RT GO-NOOP                        THEN                                ELSE     DDROP                          THEN    REPEAT DROP ( .MYSELF ) ;                                                                                                                                                                                               ( CM -> CLEAR-MINUS      < 6/26/86>205)                                         : CM                                        ' PUSH-MINUS CFA TO NTEST               ' #GO-LEFT   CFA TO GO-NOOP             ' NEG/ABS    CFA TO SP-TEST             ' DEL-NEG    CFA TO ACTION              ROOT @ TRAV *PP ;                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          ( LRP  )                                                                 (  ZERO-DEL              < 6/26/86>206) : (ZERO-DEL)                                CONFLAG @                               IF   CONPLACE @ DUP @NUM 0=               IF   DUP @PRED ROOT @ = NOT               IF    DELETE-NODE&PRED                  ELSE  DROP                              THEN                                  ELSE    DROP                            THEN                                  THEN                                     #VAR @ DUP                             IF                                        0 DO                                       I 2* VARNAME + @ DUP @NUM 0=            IF   DUP @PRED ROOT @ = NOT               IF     DELETE-NODE&PRED                 ELSE   CON SWAP !KIND                   THEN                                  ELSE      DROP                          THEN                                   LOOP                                ELSE DROP THEN ;                                                   ( LRP  )                                                                 ( +ADD !NONPLUS !VARNAME < 6/26/86>207)                                         : +ADD ( adr2 adr1 -- )                      DUP ROT DUP @NUM SWAP @DENOM            ROT DUP @NUM SWAP @DENOM                ROT DDUP * DENOM-SAVE !                 ROT * >R * R> + NUM-SAVE !                \ Put result in node                  DUP ( adr1 ) NUM-SAVE @                 SWAP !NUM DENOM-SAVE @ SWAP             !DENOM 1 ?CLT ! ;                                                          : !NONPLUS ( adr -- )                        #NONPLUS @ SWAP OVER                    2* NONPLUS + ! 1+ #NONPLUS ! ;                                             : !VARNAME ( adr -- )                        #VAR @ SWAP OVER 2*                     VARNAME + ! 1+ #VAR ! ;                                                                                                                                                                                                           ( LRP  )                                                                 (                        < 6/26/86>208) EXIT                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           ( LRP  )                                                                 ( VARCHECK               < 6/26/86>209)                                         : VARCHECK ( adr2 -- adr )                   DUP @VAROP 0 VCOUNT !                   0 FOUND !                               BEGIN                                     DUP VCOUNT @ DUP #VAR @ = NOT         WHILE                                     2* VARNAME + @ DUP                      @VAROP ROT =                            IF                                        #VAR @ VCOUNT ! 1 FOUND !               ROT DUP ROT +ADD                          \ Adds coef to var found              DUP DELETE-NODE&PRED SWAP             ELSE                                      DROP 1 VCOUNT +!                      THEN                                  REPEAT                                  DDROP FOUND @ NOT                       IF     DROP DUP !VARNAME                ELSE   DROP                             THEN ;                                                            ( LRP  )                                                                 ( CHECK-NODE             < 6/26/86>210)                                         : CHECK-NODE ( adr2 -- adr )                0 IGNORE-SUC ! DUP                      @KIND DUP VAR =                         IF                                         DROP VARCHECK                        ELSE        CON =                          IF       CONFLAG @                         IF    DUP DUP CONPLACE @ +ADD              DELETE-NODE&PRED                     ELSE  1 CONFLAG !                          DUP CONPLACE !                       THEN                                 ELSE                                        \ an op                                 DUP ?PLUS NOT                           IF                                         DUP !NONPLUS                            1 IGNORE-SUC !                       THEN                                THEN                                 THEN ;                                                             ( LRP  )                                                                 ( TCOMB                  < 6/26/86>211)                                         : TCOMB ( -- )                                  ' COMB     CFA TO NTEST                 ' #GO-LEFT CFA TO GO-NOOP               ' NEG/ABS  CFA TO SP-TEST               ' DEL-COMB CFA TO ACTION                 ROOT @ DUP                              @LT DUP SUBROOT !                       SWAP @RT RT-SAVE !                      TRAV RT-SAVE @ DUP                      SUBROOT ! TRAV *PP ;                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  ( LRP  )                                                                 ( %GO-LEFT               < 6/26/86>212)                                         : %GO-LEFT ( adr -- )                       \ Subroutine for TRAV                   BEGIN                                     DUP                                   WHILE                                     CHECK-NODE DUP                          !NSTACK                                    \ Store node adr in NSTACK           2 NPOINT +!  \ Update ptr               IGNORE-SUC @                            IF                                        DROP NUL                              ELSE                                      @LT                                   THEN                                      \ Ignore successor or                   \ get contents of left ptr.         REPEAT                                  -2 NPOINT +!  \ Point to top item       DROP ;                                                                                                     ( LRP  )                                                                 ( CLT+ CLT++             < 6/26/86>213)                                         : CLT+ ( adr -- )                           VARNAME 50 NUL FILL                     0. #VAR ! CONFLAG !                     ' %GO-LEFT CFA TO GO-NOOP               ' SKIP     CFA TO SP-TEST               TRAV (ZERO-DEL) ;                                                                                                   : CLT++ ( adr -- )                          DUP @LT CLT+ @RT CLT+ ;                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    ( LRP  )                                                                 ( CLT                    < 6/26/86>214)                                         : CLT                                        CM 0 #NONPLUS !                         NONPLUS 30 NUL FILL                     ROOT @ CLT++                            BEGIN                                     #NONPLUS @ DUP                        WHILE                                     1- DUP #NONPLUS ! 2*                    NONPLUS + @ CLT++                     REPEAT                                  DROP                                    *PP ;                                                                                                                                                                                                                                                                                                                                                                                                                                     ( LRP  )                                                                 ( L-PAR-PUT R-PAR-PUT    < 6/26/86>215)                                         : L-PAR-PUT  ( adr -- )                     DUP DUP @PAR                            1+ SWAP !PAR                            LEFT SWAP !PL/R ;                                                           : R-PAR-PUT ( adr -- )                      DUP DUP @PAR                            1+ SWAP !PAR                            RIGHT SWAP !PL/R ;                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 ( LRP  )                                                                 ( PUT-PAREN              < 6/26/86>216)                                         : PUT-PAREN ( adr -- )                       DUP @KIND OP =                          IF                                         DUP @VAROP NEG = NOT                    IF                                        DUP SUBROOT @ = NOT                     IF                                         DUP ' @LT *GO                           L-PAR-PUT                               ' @RT *GO                               R-PAR-PUT                            ELSE                                        DROP                                THEN                                  ELSE                                      DROP                                  THEN                                  ELSE                                      DROP                                  THEN ;                                                                                                   ( LRP  )                                                                 ( CLEAR-PAREN CP PP      < 6/26/86>217)                                         : CLEAR-PAREN ( adr -- )                    0 SWAP !PAR ;                                                               : CP                                        ' CLEAR-PAREN CFA TO NTEST              ' #GO-LEFT    CFA TO GO-NOOP            ' NOOP       CFA TO ACTION              ' NEG/ABS     CFA TO SP-TEST            ROOT @ TRAV ;                                                               : PP                                        CP ' PUT-PAREN CFA TO NTEST             ROOT @ DUP @LT DUP SUBROOT !            SWAP @RT RT-SAVE ! TRAV                 RT-SAVE @ DUP SUBROOT !                 TRAV ;                                                                                                                                                                                                                                                                     ( LRP  )                                                                 ( S-FORM                 < 6/26/86>218)                                         : S-FORM ( -- 0,1,2,3, or 4 )                ROOT @ DUP @RT IS-LEAF                  IF                                         @LT DUP IS-LEAF                         IF                                         DROP 1  \ lt & rt are leaves         ELSE                                       HAS-LEAVES \ left side                  IF  2 ELSE 0 THEN                    THEN                                 ELSE                                       DUP @RT HAS-LEAVES                      IF       @LT DUP IS-LEAF                   IF    DROP 3                            ELSE  HAS-LEAVES                           IF   4 ELSE 0 THEN                   THEN                                 ELSE      DROP 0                        THEN                                 THEN ;                                                                                                    ( LRP  )                                                                 ( NUM/DENOM VAR-CON VAR2/< 6/26/86>219)                                         \ I added #REDUCE to get a reduced      \ fraction in the result.               \ There may be some side effects.                                               : NUM/DENOM ( adr adradr -- )                        DUP DIST<-CHECK DIST<-OK @              IF                                         LDIST<-OK @                             IF                                         0 <DIST<>                            ELSE                                       1 <DIST<>                            THEN                                 ELSE                                       DROP                                 THEN ;                                                                                                                                                                                                                                                                                                                                                                                                                                    ( LRP  )                                                                 ( DD                     < 6/26/86>225)                                         : DD                                        \ Do distribute                         ' DO-DIST< CFA TO NTEST                 ' #GO-LEFT CFA TO GO-NOOP               ' NEG/ABS  CFA TO SP-TEST               ' NOOP    CFA TO ACTION                 ROOT @ DUP                              @LT DUP SUBROOT ! SWAP                  @RT     RT-SAVE !                       TRAV                                    RT-SAVE @ DUP SUBROOT !                 TRAV *PP ;                                                                                                                                                                                                                                                                                                                                                                                                                                 ( LRP  )                                                                 ( STUDENT MACHINE        < 6/26/86>226)                                                                                 : STUDENT                                    ' PP    CFA TO *PP ;                                                       : MACHINE                                    ' NOOP CFA TO *PP ;                                                        227 LOAD                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       ( LRP  )                                                                 (                        < 6/26/86>227)                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                ( LRP  )                                                                 (                        < 6/26/86>228) EXIT                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           ( LRP  )                                                                 ( 1VAR-CON               < 6/26/86>229)                                           6 ' WIDTH !                                                                   : 1VAR-CON                                   ROOT @ @LT DUP NUM/DENOM                DDUP = NOT                              IF                                         SWAP NUL L-MULT                         TCOMB  1 SOLVED !                    ELSE                                       DDROP                                THEN ;                                                                                                                                                                                                                                                                                                                                                                                                                                                                            ( LRP  )                                                                 ( 1VAR-CON, 1VAR2/CON2   < 6/26/86>230)                                                                                 \ * --> *  ????    I hope  ?????        : 1VAR2/CON2                                 ROOT @                                  DUP @RT DUP NUM/DENOM                     \ Note:    ROT added by GW              \ @LT requires a node adddress.         \ This one seems to want                \ the root node address.                 ROT                                     @LT @KIND VAR =                      IF                                         XVAR R-SUBT CLT                      ELSE                                       NUL R-SUBT CLT                          1 SOLVED !                           THEN ;                                                                                                                                                                                                                            ( LRP  )                                                                 ( 1FORM1                 < 6/26/86>231)                                         : 1FORM1                                     ROOT @ DUP @RT @KIND                    CON =                                   IF                                         CLT @LT @KIND VAR =                     IF                                         1VAR-CON \ X = #                     ELSE                                       1VAR2/CON2                          THEN                                  ELSE                                          @LT @KIND VAR =                         IF                                         1VAR2/CON2                           ELSE                                       SWITCH-RL 1VAR-CON                   THEN                              THEN ;                                                                                                                                                                                    ( LRP  )                                                                 ( 1FORM2 1FORM3          < 6/26/86>232)                                         : 1FORM2                                     ROOT @ @LT DUP @RT DUP                  @KIND CON = NOT                         IF                                        DROP DUP @LT                          THEN                                    DUP NUM/DENOM ROT ?PLUS                 IF                                         NUL R-SUBT                              CLT                                  ELSE                                       NUL R-ADD                               CLT                                  THEN ;                                                                     : 1FORM3                                     ROOT @ SWITCH-RL 1FORM2 ;                                                                                                                                                                                                         ( LRP  )                                                                 ( IS-RT 1FORM4 1FORM     < 6/26/86>233)                                         VARIABLE IS-RT                                                                  : 1FORM4                                     ROOT @ @RT DUP 0 IS-RT !                @LT DUP @KIND VAR = NOT                 IF                                         DROP DUP @RT 1 IS-RT !               THEN                                    DUP NUM/DENOM ROT ?MINUS                IS-RT @ AND                             IF                                         XVAR R-ADD                              CLT                                  ELSE                                       XVAR R-SUBT                             CLT                                  THEN  ;                                                                    CASE 1FORM   1FORM1    1FORM2                        1FORM3    1FORM4 ;                                                                                ( LRP  )                                                                 ( #FORM 1S1 1SOLVE1      < 6/26/86>234)                                         VARIABLE #FORM                                                                  : 1S1                                        S-FORM DUP #FORM !                      ?DUP                                    IF                                         ' NOOP CFA TO *PP                       1- 1FORM                                ' PP CFA TO *PP                      THEN ;                                                                     : 1SOLVE1                                    0 ?TCOMB ! 0 ?DIST< ! 0 ?CLT !          DD ?DIST< @                             IF       PP                             ELSE     TCOMB ?TCOMB @                    IF     PP                               ELSE   CLT ?CLT @                          IF   PP  THEN                        THEN                                 THEN ;                                                            ( LRP  )                                                                 ( 1SOLVE                 < 6/26/86>235)                                         : (TPRINT) CM RECOVER-NODES CP PP                  INORDER ;                                                            ' (TPRINT) CFA TO PRINT                                                         : <TPRINT> NOOP ;                                                               : 1SOLVE                                     RECOVER-NODES                           0 SOLVED !                              0 #FORM !                               MACHINE                                 0 ?TCOMB !                              TCOMB                                   ?TCOMB @                                IF   PP ELSE 1S1 THEN                   ?TCOMB @ NOT                            #FORM @ NOT AND                         IF   1SOLVE1 THEN                       <TPRINT> ;                         MACHINE                                                                ( LRP  )                                                                 ( ?SOLVED                < 6/26/86>236)                                         : ?SOLVED                                    0 SOLVED !                              ROOT @ DUP @LT IS-LEAF                  OVER @RT IS-LEAF AND                    IF                                         DUP @LT SWAP @RT                        DUP @KIND CON =                         IF SWAP THEN                            DUP @KIND VAR =                         IF                                         DUP @NUM 1 =                            SWAP @DENOM 1 = AND SWAP                @KIND CON = AND SOLVED !             ELSE                                       DDROP                                THEN                                 ELSE                                       DROP                                 THEN ;                                                                                                                                            ( LRP  )                                                                 ( SOLVE                  < 6/26/86>237) MAKELOCAL                                                                       : SOLVE                                      0 LOCAL !                               BEGIN                                     1SOLVE                                  1 LOCAL +!                              ?SOLVED                                 LOCAL @ 20 >                            SOLVED @ OR                           UNTIL  ;                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  ( LRP  )                                                                 ( SET/DEPTH CT           < 6/26/86>238)                                         MAKELOCAL                                                                       : SET/DEPTH                                  DEPTH LOCAL @                           DDUP    = NOT                           IF                                         - ABS    0                              DO DROP LOOP                         ELSE                                       DDROP                                THEN ;                                                                     : CT                                         ' NOOP CFA TO *PP                       CM TCOMB CLT                            SET/DEPTH ;                                                                                                                                                                                                                                                               ( LRP  )                                                                 ( UADD USUB              < 6/26/86>239)                                         : UADD   ( num denom -- )                   TO $DENOM TO $NUM                       DEPTH LOCAL !                           RECOVER-NODES                           $NUM $DENOM VARNUL  R-ADD               RECOVER-NODES                           CT RECOVER-NODES ;                                                          : USUB   ( num denom -- )                   TO $DENOM TO $NUM                       DEPTH LOCAL !                           RECOVER-NODES                           $NUM $DENOM VARNUL  R-SUBT              RECOVER-NODES CT RECOVER-NODES ;                                                                                                                                                                                                                                                                                                                           ( LRP  )                                                                 ( UDIV UMULT             < 6/26/86>240)                                         : UDIV   ( num denom -- )                    TO $DENOM TO $NUM                       DEPTH LOCAL !                           RECOVER-NODES                           $NUM $DENOM VARNUL                      DD  R-DIV DD CT ;                                                          : UMULT  ( num denom -- )                    TO $DENOM TO $NUM                       DEPTH LOCAL !                           RECOVER-NODES                           $NUM $DENOM VARNUL                      DD L-MULT  ;                                                                                                                                                                                                                                                                                                                                                                                      ( FAH  )                                                                 ( DD NPRINT TPRINT       < 6/26/86>241)                                         : DD                                         0 ?DIST< !                              DEPTH LOCAL ! RECOVER-NODES             DD   ( scr 225 )                        CM TCOMB SET/DEPTH ;                                                       : NPRINT                                     ' NOOP CFA TO <TPRINT> ;                                                   : TPRINT                                     ' (TPRINT) CFA TO <TPRINT> ;                                                                                                                                                                                                                                                                                                                                                                                                                                                      ( LRP  )                                                                 ( START OF LLOYD'S ADD   < 6/26/86>242)                                         : ==>  ( f -- )                                                                    \ If f is true, executes the action     \ part of the rule in which ==> is      \ contained.                            \ Leaves 1 on stack if fired, else 0                                            IF  1  ELSE 0 R> DROP THEN ;                                                 : TRAV-INIT  ( pfa -- node-adr )                           CFA TO NTEST                 ' NOOP     CFA TO ACTION                ' #GO-LEFT CFA TO GO-NOOP               ' SKIP     CFA TO SP-TEST               ROOT @ ;                                                                : !REDUCE   ( node-adr -- )                DUP DDUP @NUM SWAP @DENOM #REDUCE            ROT !DENOM SWAP !NUM ;                                                                                                                                                                                                  (                        < 0/ 0/ 0>243)                                         : REDUCE-ALL  ( -- )                        ' !REDUCE TRAV-INIT TRAV ;                                                  VARIABLE SIGNAL                                                                 : ?*/  ( node-adr -- )                      DUP ?MULT SWAP ?DIV OR                  IF 1 SIGNAL +! THEN ;                                                       :    IF-*/                                      0 SIGNAL !                              ' ?*/   TRAV-INIT TRAV                  SIGNAL @ 0>                             ==>                                         DD                                      CR ." Distribute" ;                                                 : ?CONS-LIKE  ( adr -- )                   @KIND CON = IF  1 SIGNAL +! THEN ;                                                                                                                                                                                           (                        < 6/26/86>244)                                         : IF-CONS-LIKE  ( -- f )                   0 SIGNAL !                              ' ?CONS-LIKE TRAV-INIT                  DUP @LT TRAV SIGNAL @ 0 SIGNAL !        SWAP @RT TRAV                           SIGNAL @ 1 > SWAP 1 > OR                ==>                                         CT CR ." Clear like terms" ;                                             : ?VARS-LIKE ( adr -- )                    @KIND VAR = IF 1 SIGNAL +! THEN ;                                            : IF-VARS-LIKE  ( -- f )                   0 SIGNAL !                              ' ?VARS-LIKE TRAV-INIT                  DUP @LT TRAV SIGNAL @ 0 SIGNAL !        SWAP @RT TRAV                           SIGNAL @ 1 > SWAP 1 > OR                ==>                                         CT CR ." Clear like terms" ;                                                                                                                                                     (                        < 6/26/86>244)                                         : ?CONSTANT  ( adr -- )                     DUP @KIND CON = IF                                        SIGNAL !                              ELSE                                      DROP                                  THEN ;                                                      :    IF-LT-CONSTANT                           0 SIGNAL !                              ' ?CONSTANT  TRAV-INIT @LT TRAV         SIGNAL @ 0 = NOT                        ==>                                         0 TO VARNUL                             SIGNAL @ DUP DUP                        CR ." Subtract " .NODE                  @NUM SWAP @DENOM USUB ;                                                                                                                                                                                                                                                                                                                       (                        < 6/26/86>245)                                         : ?VAR       ( adr -- )                     DUP @KIND VAR = IF                                        SIGNAL !                              ELSE                                      DROP                                  THEN ;                                                      :    IF-RT-VARS                               0 SIGNAL !                              ' ?VAR   TRAV-INIT @RT TRAV             SIGNAL @ 0 = NOT                        ==>                                         SIGNAL @ DUP DUP DUP                    @VAROP TO VARNUL                        CR ." Subtract " .NODE                  @NUM SWAP @DENOM USUB ;                                                                                                                                                                                                                                                                                                                       (                        < 6/26/86>246)                                         :    IF-COEF                                  0 SIGNAL !                              ' ?VAR   TRAV-INIT @LT TRAV             SIGNAL @ @NUM 1 = NOT                   ==>                                         0 TO VARNUL                             SIGNAL @ DUP DDUP                       CR ." Divide by "                       @NUM SWAP @DENOM .N/D                   @NUM SWAP @DENOM UDIV ;                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       (                        < 0/ 0/ 0>247)                                         : INTERPRETER                               :                                       DOES>                                     0 BEGIN                                     DDUP 2* + @                             DUP ' <EXIT> CFA =                      IF                                        DROP 0                                ELSE                                      EXECUTE NOT                           THEN                                  WHILE                                     1+                                    REPEAT DDROP ;                                                                                                                                                                                                                                                                                                                                                                                                                  ( SOLVER    PRINT SCREEN < 0/ 0/ 0>248)                                         INTERPRETER LSOLVE                                    IF-*/                                   IF-CONS-LIKE                            IF-VARS-LIKE                            IF-LT-CONSTANT                          IF-RT-VARS                              IF-COEF ;                                                         : SOLVEIT                                   CR PRINT                                BEGIN                                     LSOLVE                                  REDUCE-ALL                              CR PRINT                                ?SOLVED                                 SOLVED @                              UNTIL ;                                                                                                                                                                                                                                                                                                     ( SOLVER LOAD            < 0/ 0/ 0>250) \ SOLVER VIRTUAL                                FORTH DEFINITIONS                   FORGET-SYS                          \ \ \ \ \ \  \ \ \                      \ SCREEN 248 IS THE PRINT SCREEN        \  PRINT 140 239 AND 250 261            \   278 LOAD \ .S                                                               251 261  THRU                           \ : DBOS1 ;                             CR CR CR                                ." *****************************"       CR ." THE SOLVER IS LOADED "            CR ." TYPE EMPTY-BUFFERS SAVE-FORTH"    CR ." THEN LOAD THE OPDB PART 1 DISK"   CR ." FROM SCREEN 141 "                 CR ." *****************************"    CR CR CR                                EXIT                                    \ \ \ \ \ \ \ \  \ \ \                  \ \ \ \ \ \ \ \ \                                                                                                                                                                       ( SOLVER                 < 0/ 0/ 0>251)                                                                                 \ \ \ \ \                                                                       \ \ \ \ \ \ \ \ \ \  \ \ \                                                                                              \ \ \ \ \ \ \ \ \ \  \ \ \              \ \ \ \ \ \ \ \ \ \  \ \ \              \ \ \ \ \ \ \ \ \ \  \ \ \              \ \ \ \ \ \ \ \ \ \  \ \ \              \ \ \ \ \ \ \ \ \ \  \ \ \                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      ( SOLVER                 < 0/ 0/ 0>252)                                         10 TO WIDTH                             ( **************************** )        ( WIDTH MUST BE SET TO AT LEAST 10 )    ( FOR VIR-CHK  SEE 87 ON )              ( VIRTUAL LOADER DISK )                 ( **************************** )                                                VIRTUAL                                 SECS/TRK TRKS/HD  * 1- NEXT-SECTOR !    \ SOLVE-NEXT @   NEXT-SECTOR  !                                                 DECIMAL FORGET-SYS                                                              FREEZE VIRTUAL VIR-BASE DP !                                                    VIR-TST FORTH CONSTANT VIR-CHK                                                  VIRTUAL                                 LATEST PFA-LFA ' SOLVE-FIRSTLFA !       FORTH CR CR                                                                                                                                                                             ( SOLVER                 < 0/ 0/ 0>253)                                         \ \ \ \ \ \ \ \ \ \  \ \ \              \ \ \ \ \ \ \ \ \ \ \ \ \               \ \ \ \ \ \ \ \ \ \  \ \ \              \ \ \ \ \ \ \ \ \ \  \ \ \                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              ( SOLVE-SYS, GET-SOLVE   < 0/ 0/ 0>254) EXIT                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    (                        < 0/ 0/ 0>255)                                                                                 \ \ \ \ \                               \ \ \ \ \ \ \ \ \ \  \ \ \              \ \ \ \ \ \ \ \ \ \  \ \ \                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              ( INSTRUCTIONS           < 0/ 0/ 0>256) CR CR                                   \                                       \                                       \ \ \ \ \ \ \ \ \ \ \ \ \  \                                                    CR ." THE SOLVER CODE IS LOADING "      FORTH DEFINITIONS                       HERE                                    140 LOAD    \ VARIABLE/CONSTANTS        146 LOAD                                HERE SWAP - ." BYTES = " U.             20 TO WIDTH                             CR ." THE SOLVER IS LOADED  "           CR ." I HOPE????            "           CR                                                                                                                                                              EXIT                                                                                                                                                                                                                                                                    ( INSTALL SOLVE          < 0/ 0/ 0>257)                                            VIRTUAL                                                                         LATEST PFA-LFA ' SOLVE-LASTLFA !        ( SAVE LFA OF LAST WORD IN SOLVE )                                              FORTH                                                                           ICEBOX @ VOC-LINK !                  ( REMOVE ANY ADDED VOC FROM VOC-LINKAGE)                                           ICEBOX 2+ @ DP !                        ( RESTORE PRIOR DP )                                                            ICEBOX 4 + @ CONTEXT @ ! DEFINITIONS    ( RESTORE PRIOR LATESTLFA )                                                                                                                                                                                                                                                                                         ( GRW)                                                                   (  SOLVER                < 0/ 0/ 0>258)                                            FORGET-SYS VIRTUAL 2 SYS-FLG !                                                  SYS-LINK1  SOLVE-FIRSTLFA !                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  ( INSTALL SOLVE          < 0/ 0/ 0>259)                                                                                                                            SOLVE-LASTLFA SYS-LINK2 !                                                       FORTH                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        ( INSTALL SOLVE          < 0/ 0/ 0>260)                                         EXIT                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            ( INSTALL SOLVE  <CONCLD>< 0/ 0/ 0>261)    VIRTUAL                                 SOLVE-RWTS VIR-BASE                       OVER ! ( ADDR )                       6 OVER 2+ !               ( SLOT 6 )    NEXT-SECTOR @ SOLVE-SECTS -             DUP NEXT-SECTOR ! ( UPDATE NEXT-SEC)    1+ SECS/TRK /MOD 0 4 PICK 4 + !                                 ( DRV 0   )     3 PICK 8 + ! OVER 6 + ! ( TRK&SEC )     @RWTS-PARAM 0 SOLVE-SECTS RWTS          ( SAVE A&E TO DISK )                    FORGET-SYS CR CR                     CR ." THE SOLVER  IS INSTALLED" CR      CR ." ON THE DISK             " CR      EXIT                                                                                                                                                                                                                                                                                                                                                                                                                                    (                        < 0/ 0/ 0>262)                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                ( GRW)                                                                   (                        < 0/ 0/ 0>263)                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                ( GRW)                                                                   (                        < 0/ 0/ 0>264)                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                ( GRW)                                                                   (                        < 0/ 0/ 0>265)                                         : VAR-RAND  ( -- )                         2 RANDOM 88 * TO VARNUL ;                                                    : RANDNUM/DENOM  ( -- n1 n2 )              10  RANDOM 5  -                         10  RANDOM 5  - DUP 0= IF NOT THEN ;                                         : ADD-RAND  ( -- )                         VAR-RAND  RANDNUM/DENOM DDUP SWAP       ." Add " . ." /" . VARNUL DUP           IF EMIT ELSE DROP THEN  UADD ;                                               : SUB-RAND  ( -- )                         VAR-RAND  RANDNUM/DENOM DDUP SWAP       ." Subtract " . ." /" . VARNUL          DUP IF EMIT ELSE DROP THEN USUB ;                                                                                                                                                                                                                                                                                                                    (                        < 0/ 0/ 0>266)                                         : MULT-RAND  ( -- )                        0 TO VARNUL RANDNUM/DENOM DDUP SWAP     ." Multiply by " . ." /" .              UMULT ;                                                                      : DIV-RAND   ( -- )                        0 TO VARNUL RANDNUM/DENOM DDUP SWAP     ." Divide by " . ." /" .                UDIV ;                                                                       : DD-RAND   ( -- )                         ." Distribute" DD ;                                                          : CT-RAND   ( -- )                         ." Clear like terms